print("Hello World")
name <- "Janak"
age <- 20
x <- 1:5
y < x^2
y <- x^2
plot(x, y)
5+5
# Print "Hello, World!" to the console
print("Hello, World!")
source("D://R/main.R")
if (name == "Janak Singh Dhami"){
print("Yes, You are correct.")
}
if (name == "Janak Singh Dhami"){
print("Yes, You are correct.")
}
source("D://R/main.R")
if (name == "Janak Singh Dhami"){
print("Yes, You are correct.")
}
print("ho")
print("ho")
print("Yes, You are correct.")
if (name == "Janak Singh Dhami"){
print("Yes, You are correct.")
}
print("ho")
print("ho")
print("ho")
mtcars
df <- data.frame(mtcars)
View(df)
view(df)
view(df)
view(df)
View(df)
names(df)
names(df)
View(df)
df$cyl
df$mpg
plot(df)
plot(df$mpg, df$disp)
plot(df$mpg, df$disp, main="Scatter Plot")
plot(df$mpg, df$disp, main="Scatter Plot")
plot(df$mpg, df$disp, main="Scatter Plot", colors(factor(df$gear)))
plot(df$mpg, df$disp, main="Scatter Plot", colors(factor(df$gear)))
plot(df$mpg, df$disp, main="Scatter Plot", colors=factor(df$gear))
plot(df$mpg, df$disp, main="Scatter Plot")
plot(df$mpg, df$disp, main="Scatter Plot")
pie(df$gear)
View(df)
pie(factor(df$gear))
pie(abs(factor(df$gear)))
pie(df)
plot(df$mpg, df$disp, main="Scatter Plot")
install.packages("ggplot2")
library(ggplot2)
plot("G")
print("Go")
plot(df$mpg, df$disp, main="Scatter Plot")
plot(df$mpg, df$disp, main="Scatter Plot")
plot(df$mpg, df$disp, main="Scatter Plot")
print("Go")
print("Go")
source("D:/R/main.R")
df
head(df)
df.head()
tail(df)
library(diplyr)
library(dplyrr)
library(dplyr)
library("dplyr")
source("D:/R/main.R")
select(df, df$gear == 4)
select(df, 'df$gear == 4')
filter(df, 'df$gear == 4')
filter(df, df$gear == 4)
select(df)
select(4:5)
filter(df, df$gear == 4)
l
p_table = read.csv("p_table.csv")
View(p_table)
names(p_table)
p_table$Symbol
plot(p_table$Symbol, p_table$AtomicMass)
plot(p_table$AtomicNumber, p_table$AtomicMass, xlabel=p_table$Symbol)
plot(p_table$AtomicNumber, p_table$AtomicMass, xlab=p_table$Symbol)
plot(p_table$AtomicNumber, p_table$AtomicMass, p_table$Symbol)
plot(p_table$AtomicNumber, p_table$AtomicMass, xlab = p_table$Symbol)
plot(p_table$AtomicNumber, p_table$AtomicMass, xlab = p_table$Symbol)
plot(p_table$AtomicNumber, p_table$AtomicMass, p_table$Symbol)
plot(p_table$AtomicNumber, p_table$AtomicMass, xlab = "Atomic Number", ylab = "Atomic Masses")
View(p_table)
library('dplyr')
select(p_table$Symbol=='H')
select(p_table$Symbol, 'H')
select(p_table$Symbol, "H")
source("D:/R/main.R")
View(df)
View(p_table)
View(df)
View(p_table)
p_table <- read.csv("D:/R/p_table.csv")
View(p_table)
getwd()
#to check current working directory
getwd()
setwd("D:/R")
getwd()
p_df <- read.csv('p_table.csv')
#read csv file
p_data <- read.csv('p_table.csv')
View(p_df)
#read csv file
p_data <- read.csv('p_table.csv')
p_df <- data.frame(p_data)
View(p_df)
if(grpl("ggplot2")){
print("Yes, you have...")
}else{
print("you don't have....")
}
if(grpl("ggplot2")){
print("Yes, you have...")
}else{
print("you don't have....")
}
if(gerpl("ggplot2")){
print("Yes, you have...")
}else{
print("you don't have....")
}
library(ggplot2)
detach("package:ggplot2", unload = TRUE)
library(ggplot2)
detach("package:ggplot2", unload = TRUE)
library(ggplot2)
detach("package:ggplot2", unload = TRUE)
head(p_df)
tail(p_df)
#to check current working directory
getwd()
setwd("D:/R")
#check again
getwd()
#read csv file
p_data <- read.csv('p_table.csv')
# create data frame
p_df <- data.frame(p_data)
# view Data frame
View(p_df)
ggplot(mtcars, aes(x=mpg, y=hp)) +
geom_point() +
labs(title="Scatter Plot of mpg vs hp", x="Miles per Gallon", y="Horsepower") +
geom_line()+
geom_smooth(method = 'loess')
#import
library(ggplot2)
# Create a simple scatter plot
ggplot(mtcars, aes(x=mpg, y=hp)) +
geom_point() +
labs(title="Scatter Plot of mpg vs hp", x="Miles per Gallon", y="Horsepower") +
geom_line()+
geom_smooth(method = 'loess')
#to check current working directory
getwd()
#to check current working directory
getwd()
setwd("D:/R")
#check again
getwd()
#read csv file
p_data <- read.csv('p_table.csv')
# create data frame
p_df <- data.frame(p_data)
# view Data frame
View(p_df)
# print top 6 data
head(p_df)
# print bottom 6 data
tail(p_df)
# print top 6 data
head(p_df)
# print bottom 6 data
tail(p_df)
# summarize data
summary(p_df)
# headers
names(p_df)
str(p_df)
nrow(p_df)
ncol(p_df)
length(p_df)
dim(p_df) #shows the dimensions of the data frame
colnames(p_df) #shows the name of each column in the data
names(p_df2)
p_df2<- p_df [c(1:4,15,5:14)]
names(p_df2)
p_df2<- p_df [c(1:10),c(1:4)]
names(p_df2)
View(p_df2)
p_df2<- p_df [c(1:4,15,5:14)]
names(p_df2)
View(p_df2)
View(p_df)
# Install the ggplot2 package for data visualization
install.packages("ggplot2")
# Load the ggplot2 library
library(ggplot2)
# to save
write.csv("p_df2.csv")
# to save
p_df2.write.csv("p_df2.csv")
# to save
write.csv(p_df2, "p_df2.csv", row.names = TRUE)
#read csv file
p_data <- read.csv('p_table.csv')
# create data frame
p_df <- data.frame(p_data)
10
# to save
write.csv(p_df2, "p_df2.csv", row.names = TRUE)
p_df2<- p_df [c(1:10),c(1:4)]  #10 rows 4 cols
names(p_df2)
# to save
write.csv(p_df2, "p_df2.csv", row.names = TRUE)
test <- subset(p_df, p_df$AtomicNumber==2 )
View(test)
install.packages('dplyr')
library(dplyr) #for manipulate data
library("dplyr") #for manipulate data
#check again
getwd()
source("D://R/Code/data_import.R")
#read csv file
p_data <- read.csv('p_table.csv')
# create data frame
p_df <- data.frame(p_data)
# view Data frame
View(p_df)
# print top 6 data
head(p_df)
#just use in rstudio for changing value
fix(p_df)
View(p_df)
#check again
getwd()
#check again
getwd()
source("D://R/Code/data_import.R")
#to check current working directory
getwd()
setwd("D:/R/Data")
#check again
getwd()
#read csv file
p_data <- read.csv('p_table.csv')
# create data frame
p_df <- data.frame(p_data)
#read csv file
p_data <- read.csv('p_table.csv')
View(p_data)
p_df
#read csv file
p_data <- read.csv('p_table.csv')
# create data frame
p_df <- data.frame(p_data)
# view Data frame
View(p_df)
View(p_df)
# print top 6 data
head(p_df)
# print bottom 6 data
tail(p_df)
p_df
#just use in rstudio for changing value
fix(p_df)
# summarize data
summary(p_df)
names
# headers
names(p_df)
str(p_df)
nrow(p_df)
length(p_df)
ncol(p_df)
length(p_df)
colnames(p_df) #shows the name of each column in the data
p_df2<- p_df [c(1:4,15,5:14)] #filter data
View(p_df2)
p_df2<- p_df [c(1:10),c(1:4)]  #10 rows 4 cols
View(p_df2)
View(p_df2)
View(p_df)
View(p_df)
# to filter data
test <- subset(p_df, p_df$Symbol=='B' )
View(test)
# to save
write.csv(test, "test.csv", row.names = TRUE)
install.packages("ggplot2")
library(ggplot2)
detach("package:ggplot2", unload = TRUE)
library(ggplot2)
detach("package:ggplot2", unload = TRUE)
library(ggplot2)
# Update all packages
update.packages()
getwd()
ls
print("Hello World")
cat("Hello World!")
paste("Hello World")
add <- function(a, b){}
add <- function(a, b){
sum <- a+b
}
add(4, 6)
add <- function(a, b){
sum <- a + b
sum
}
add(4, 6)
if( name == "Janak"){}
if( name == "Janak"){
print(paste("Hello,", name))
}
name <- "Janak"
if( name == "Janak"){
print(paste("Hello,", name))
}
add(55, 545454545454545454)
a <- readline(prompt = "Enter First Number:")
cat("What do you want?")
cat("1. sum")
cat("1. sub")
cat("1. divide")
p <- readline(prompt = "Choose one (1, 2, 3,..)")
result <- switch (p,
1 = a+b,
a <- readline(prompt = "Enter First Number:")
cat("What do you want?")
cat("1. sum")
cat("1. sub")
cat("1. divide")
p <- readline(prompt = "Choose one (1, 2, 3,..)")
result <- switch (p,
1 ="a+b",
if (is.numeric(result)) {
cat("The result is:", result, "\n")
} else {
cat(result, "\n")
}
a <- as.numeric(readline(prompt = "Enter First Number: "))
cat("What do you want?\n")
cat("1. Sum\n")
cat("2. Subtract\n")
cat("3. Divide\n")
p <- as.numeric(readline(prompt = "Choose one (1, 2, 3): "))
result <- switch(p,
`1` = a + b,
`2` = a - b,
`3` = ifelse(b != 0, a / b, "Error: Division by zero"),
"Invalid choice"
)
if (is.numeric(result)) {
cat("The result is:", result, "\n")
} else {
cat(result, "\n")
}
a <- as.numeric(readline(prompt = "Enter First Number: "))
cat("What do you want?\n")
cat("1. Sum\n")
cat("2. Subtract\n")
cat("3. Divide\n")
p <- as.numeric(readline(prompt = "Choose one (1, 2, 3): "))
result <- switch(p,
`1` = a + b,
`2` = a - b,
`3` = ifelse(b != 0, a / b, "Error: Division by zero"),
"Invalid choice"
)
if (is.numeric(result)) {
cat("The result is:", result, "\n")
} else {
cat(result, "\n")
}
a <- as.numeric(readline(prompt = "Enter First Number: "))
cat("What do you want?\n")
cat("1. Sum\n")
cat("2. Subtract\n")
cat("3. Divide\n")
p <- as.numeric(readline(prompt = "Choose one (1, 2, 3): "))
result <- switch(p,
`1` = a + b,
`2` = a - b,
`3` = ifelse(b != 0, a / b, "Error: Division by zero"),
"Invalid choice"
)
if (is.numeric(result)) {
cat("The result is:", result, "\n")
} else {
cat(result, "\n")
}
a <- as.numeric(readline(prompt = "Enter First Number: "))
b <- as.numeric(readline(prompt = "Enter Second Number: "))
cat("What do you want?\n")
cat("1. Sum\n")
cat("2. Subtract\n")
cat("3. Divide\n")
p <- as.numeric(readline(prompt = "Choose one (1, 2, 3): "))
result <- switch(p,
`1` = a + b,
`2` = a - b,
`3` = ifelse(b != 0, a / b, "Error: Division by zero"),
"Invalid choice"
)
if (is.numeric(result)) {
cat("The result is:", result, "\n")
} else {
cat(result, "\n")
}
`7_9.1st.data_ele` <- read.csv("H:/Plasma Physics/Plasma Jet/elec waveform/7_9 1st data_ele.csv", header=FALSE)
View(`7_9.1st.data_ele`)
View(`7_9.1st.data_ele`)
fic
fix(7_9.1st.data_ele)
fix(`7_9.1st.data_ele`)
df <- data.frame
df <- data.frame(`7_9.1st.data_ele`)
View(df)
df <- df[-1]
View(df)
df <- data.frame(`7_9.1st.data_ele`)
df <- df[, -c(1)]
df <- data.frame(`7_9.1st.data_ele`)
df <- df[, -c(1), ]
df <- data.frame(`7_9.1st.data_ele`)
df
df <- !df$V1 == NA
df <- data.frame(`7_9.1st.data_ele`)
df <- df[-c(1, )]
df <- df[-c(1)]
df <- data.frame(`7_9.1st.data_ele`)
df <- df[-c(1),,]
df <- df[-c(2),,]
df <- data.frame(`7_9.1st.data_ele`)
df <- df[-c(1),,]
View(`7_9.1st.data_ele`)
df <- data.frame(`7_9.1st.data_ele`)
df <- df[-c(1),]
fix(df)
row.names(df)
fix(df)
ncol(df)
nrow(df)
plot(df$SN, df$V1)
plot(df$V1, df$V2)
write.csv(df, "elec_data.csv", col.names = TRUE, row.names = FALSE)
write.csv(df, "elec_data.csv")
write.csv(df, "elec_data.csv",row.names = FALSE)
read.csv('elec_data.csv')
df <- read.csv('elec_data.csv')
getwd()
setwd("D:/R/Data")
getwd()
setwd("D:/R")
getwd()
a <- c(1:8)
A <- matrix(a, nrow=3, ncol=4)
print(A)
A <- matrix(a, nrow=2, ncol=4)
print(A)
print(A)
View(A)
B <- matrix(c(2, 5, 7, 8, 3, 3, 5, 6), nrow=2, ncol=4)
C<- A + B
View(C)
AB <- A * B
View(AB)
getwd()
df <- read.csv("p_table.csv")
df <- data.frame(df)
View(df)
plot(df$AtomicNumber, df$BoilingPoint)
plot(df$AtomicNumber, df$BoilingPoint, main = "Boilig Point of ELements", type = "b")
plot(df$AtomicNumber, df$BoilingPoint, ylab = "Boiling Point" main = "Boilig Point of ELements", type = "b")
plot(df$AtomicNumber, df$BoilingPoint, ylab = "Boiling Point", xlab = "Atomic Number" main = "Boilig Point of ELements", type = "b")
plot(df$AtomicNumber, df$BoilingPoint, ylab = "Boiling Point", xlab = "Atomic Number", main = "Boilig Point of ELements", type = "b")
plot(df$AtomicNumber, df$BoilingPoint, ylab = "Boiling Point", xlab = "Atomic Number", main = "Boilig Point of ELements", type = "b", col="red")
plot(df$AtomicNumber, df$BoilingPoint, ylab = "Boiling Point", xlab = "Atomic Number", main = "Boilig Point of ELements", type = "b", col=red)
plot(df$AtomicNumber, df$BoilingPoint, ylab = "Boiling Point", xlab = "Atomic Number", main = "Boilig Point of ELements", type = "b", col='red')
plot(df$AtomicNumber, df$BoilingPoint, ylab = "Boiling Point", xlab = "Atomic Number", main = "Boilig Point of ELements", type = "b", col='blue', xlim = c(0, 100))
names(df)
summary(df)
summary(df$Density)
colnames(df$Density)
rownames(df$Density)
print(df$AtomicNumber)
print(df$GroupBlock)
jak <- factor(df$GroupBlock)
print(jack)
print(jak)
levels(jak)
str(df)
ablib
